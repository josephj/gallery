if (typeof _yuitest_coverage == "undefined"){
    _yuitest_coverage = {};
    _yuitest_coverline = function(src, line){
        var coverage = _yuitest_coverage[src];
        if (!coverage.lines[line]){
            coverage.calledLines++;
        }
        coverage.lines[line]++;
    };
    _yuitest_coverfunc = function(src, name, line){
        var coverage = _yuitest_coverage[src],
            funcId = name + ":" + line;
        if (!coverage.functions[funcId]){
            coverage.calledFunctions++;
        }
        coverage.functions[funcId]++;
    };
}
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"] = {
    lines: {},
    functions: {},
    coveredLines: 0,
    calledLines: 0,
    coveredFunctions: 0,
    calledFunctions: 0,
    path: "build/gallery-node-autogrow/gallery-node-autogrow.js",
    code: []
};
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"].code=["YUI.add('gallery-node-autogrow', function (Y, NAME) {","","/**"," * The NodeAutoGrow Node Plugin makes textarea expands in height"," * to fit its contents automatically."," *"," * Usage:"," *"," *     <link rel=\"stylesheet\" href=\"assets/node-autogrow.css\">"," *     <script type=\"text/javascript\" src=\"http://yui.yahooapis.com/3.7.3/build/yui/yui-min.js\"></script>"," *     <script type=\"text/javascript\" src=\"gallery-node-autogrow.js\"></script>"," *     <script>"," *     YUI().use(\"gallery-node-autogrow\", function (Y) {"," *         Y.one(\"textarea\").plug(Y.NodeAutoGrow);"," *     });"," *     </script>"," *"," *  @module gallery-node-autogrow"," */","","var _getClassName,","    _createBox,","    NodeAutoGrow;","","/**"," * A shortcut of Y.ClassNameManager.getClassName method."," *"," * @method _getClassName"," * @private"," * @return {String} The class name with prefix generated by classmanager."," */","_getClassName = function (text) {","    var className;","    if (!text) {","        className = Y.ClassNameManager.getClassName(NodeAutoGrow.NAME);","    } else {","        className = Y.ClassNameManager.getClassName(NodeAutoGrow.NAME, text);","    }","    return className;","};","","/**"," * For implementing the trick in 'Expanding Text Areas Made Elegant',"," * a container outside textarea is necessary to be created."," *"," * @method _createBox"," * @private"," * @param node {Y.Node} The YUI Node instance."," */","_createBox = function (node) {","    var el,    // The wrapper element.","        text,  // The textarea element.","        range;","","    text = node._node;","    el = document.createElement(\"div\");","    el.className = _getClassName();","    if (Y.UA.ie) { // TODO - Make sure if IE9+ supports DOM range.","        el.applyElement(text, \"outside\");","    } else {","        range = document.createRange();","        range.selectNode(text);","        range.surroundContents(el);","    }","    return Y.one(el);","};","","/**"," * An utility that makes textarea expands in height to fit its contents."," *"," * @class NodeAutoGrow"," * @constructor"," * @param {Object} config attribute object"," */","NodeAutoGrow = function (config) {","    this._node = config.host;","    NodeAutoGrow.superclass.constructor.apply(this, arguments);","};","","NodeAutoGrow.MIRROR_HTML = \"<pre><span></span><br></pre>\";","","Y.extend(NodeAutoGrow, Y.Plugin.Base, {","    /**","     * Execute automatically when user plugs.","     *","     * @method initializer","     * @public","     * @param config {Object} The config attribute object.","     */","    initializer: function (config) {","        var that = this,","            boundingBox, // The textarea container.","            html,        // The shortcut for NodeAutoGrow.MIRROR_HTML constant.","            mirrorNode,","            textNode,","            width;","","        html = NodeAutoGrow.MIRROR_HTML;","        textNode = config.host;","","        // Check if the config host is textarea.","        if (textNode.get(\"nodeName\").toLowerCase() !== \"textarea\") {","            return false;","        }","","        // Create the container if necessary.","        boundingBox = Y.one(config.boundingBox) || null;","        if (!boundingBox || !boundingBox.one(\"textarea\")) {","            boundingBox = _createBox(textNode);","            that._set(\"boundingBox\", boundingBox);","        }","","        if (config.width && parseInt(config.width, 10)) {","            width = parseInt(config.width, 10);","            boundingBox.setStyle(\"width\", width + \"px\");","        }","","        // Set the mirror <pre/> element.","        if (!boundingBox.one(\"pre span\")) {","            boundingBox.insert(html, textNode);","        }","        mirrorNode = boundingBox.one(\"span\");","","        // Set class","        boundingBox.addClass(_getClassName());","","        // Initalize the value.","        mirrorNode.setHTML(textNode.getHTML());","","        // Bind event.","        textNode.on(\"valuechange\", function () {","            mirrorNode.set(\"text\", this.get(\"value\"));","        });","","    }","});","","NodeAutoGrow.NAME = \"autogrow\";","NodeAutoGrow.NS = \"AutoGrow\";","","Y.namespace(\"Plugin\");","Y.Plugin.NodeAutoGrow = NodeAutoGrow;","","","}, '@VERSION@', {\"requires\": [\"node-pluginhost\", \"node-style\", \"event-valuechange\", \"classnamemanager\", \"plugin\"]});"];
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"].lines = {"1":0,"21":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0,"50":0,"51":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"65":0,"75":0,"76":0,"77":0,"80":0,"82":0,"91":0,"98":0,"99":0,"102":0,"103":0,"107":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"119":0,"120":0,"122":0,"125":0,"128":0,"131":0,"132":0,"138":0,"139":0,"141":0,"142":0};
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"].functions = {"_getClassName:32":0,"_createBox:50":0,"NodeAutoGrow:75":0,"(anonymous 2):131":0,"initializer:90":0,"(anonymous 1):1":0};
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"].coveredLines = 47;
_yuitest_coverage["build/gallery-node-autogrow/gallery-node-autogrow.js"].coveredFunctions = 6;
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 1);
YUI.add('gallery-node-autogrow', function (Y, NAME) {

/**
 * The NodeAutoGrow Node Plugin makes textarea expands in height
 * to fit its contents automatically.
 *
 * Usage:
 *
 *     <link rel="stylesheet" href="assets/node-autogrow.css">
 *     <script type="text/javascript" src="http://yui.yahooapis.com/3.7.3/build/yui/yui-min.js"></script>
 *     <script type="text/javascript" src="gallery-node-autogrow.js"></script>
 *     <script>
 *     YUI().use("gallery-node-autogrow", function (Y) {
 *         Y.one("textarea").plug(Y.NodeAutoGrow);
 *     });
 *     </script>
 *
 *  @module gallery-node-autogrow
 */

_yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "(anonymous 1)", 1);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 21);
var _getClassName,
    _createBox,
    NodeAutoGrow;

/**
 * A shortcut of Y.ClassNameManager.getClassName method.
 *
 * @method _getClassName
 * @private
 * @return {String} The class name with prefix generated by classmanager.
 */
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 32);
_getClassName = function (text) {
    _yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "_getClassName", 32);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 33);
var className;
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 34);
if (!text) {
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 35);
className = Y.ClassNameManager.getClassName(NodeAutoGrow.NAME);
    } else {
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 37);
className = Y.ClassNameManager.getClassName(NodeAutoGrow.NAME, text);
    }
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 39);
return className;
};

/**
 * For implementing the trick in 'Expanding Text Areas Made Elegant',
 * a container outside textarea is necessary to be created.
 *
 * @method _createBox
 * @private
 * @param node {Y.Node} The YUI Node instance.
 */
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 50);
_createBox = function (node) {
    _yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "_createBox", 50);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 51);
var el,    // The wrapper element.
        text,  // The textarea element.
        range;

    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 55);
text = node._node;
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 56);
el = document.createElement("div");
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 57);
el.className = _getClassName();
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 58);
if (Y.UA.ie) { // TODO - Make sure if IE9+ supports DOM range.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 59);
el.applyElement(text, "outside");
    } else {
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 61);
range = document.createRange();
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 62);
range.selectNode(text);
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 63);
range.surroundContents(el);
    }
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 65);
return Y.one(el);
};

/**
 * An utility that makes textarea expands in height to fit its contents.
 *
 * @class NodeAutoGrow
 * @constructor
 * @param {Object} config attribute object
 */
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 75);
NodeAutoGrow = function (config) {
    _yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "NodeAutoGrow", 75);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 76);
this._node = config.host;
    _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 77);
NodeAutoGrow.superclass.constructor.apply(this, arguments);
};

_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 80);
NodeAutoGrow.MIRROR_HTML = "<pre><span></span><br></pre>";

_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 82);
Y.extend(NodeAutoGrow, Y.Plugin.Base, {
    /**
     * Execute automatically when user plugs.
     *
     * @method initializer
     * @public
     * @param config {Object} The config attribute object.
     */
    initializer: function (config) {
        _yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "initializer", 90);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 91);
var that = this,
            boundingBox, // The textarea container.
            html,        // The shortcut for NodeAutoGrow.MIRROR_HTML constant.
            mirrorNode,
            textNode,
            width;

        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 98);
html = NodeAutoGrow.MIRROR_HTML;
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 99);
textNode = config.host;

        // Check if the config host is textarea.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 102);
if (textNode.get("nodeName").toLowerCase() !== "textarea") {
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 103);
return false;
        }

        // Create the container if necessary.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 107);
boundingBox = Y.one(config.boundingBox) || null;
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 108);
if (!boundingBox || !boundingBox.one("textarea")) {
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 109);
boundingBox = _createBox(textNode);
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 110);
that._set("boundingBox", boundingBox);
        }

        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 113);
if (config.width && parseInt(config.width, 10)) {
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 114);
width = parseInt(config.width, 10);
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 115);
boundingBox.setStyle("width", width + "px");
        }

        // Set the mirror <pre/> element.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 119);
if (!boundingBox.one("pre span")) {
            _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 120);
boundingBox.insert(html, textNode);
        }
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 122);
mirrorNode = boundingBox.one("span");

        // Set class
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 125);
boundingBox.addClass(_getClassName());

        // Initalize the value.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 128);
mirrorNode.setHTML(textNode.getHTML());

        // Bind event.
        _yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 131);
textNode.on("valuechange", function () {
            _yuitest_coverfunc("build/gallery-node-autogrow/gallery-node-autogrow.js", "(anonymous 2)", 131);
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 132);
mirrorNode.set("text", this.get("value"));
        });

    }
});

_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 138);
NodeAutoGrow.NAME = "autogrow";
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 139);
NodeAutoGrow.NS = "AutoGrow";

_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 141);
Y.namespace("Plugin");
_yuitest_coverline("build/gallery-node-autogrow/gallery-node-autogrow.js", 142);
Y.Plugin.NodeAutoGrow = NodeAutoGrow;


}, '@VERSION@', {"requires": ["node-pluginhost", "node-style", "event-valuechange", "classnamemanager", "plugin"]});
